// Avalanche | MIT License | @colourgarden
// Forked by Luca Mamprin
// Required SCSS files.
@import './variables';
@import './tools/functions';
@import './tools/mixins';

// GRID LAYOUT
.#{slCreateBlockClassName()} {
  display: block;
  list-style: none;
  padding: 0;
  margin: 0;
  margin-left: -($ls-gutter);
  font-size: 0;

  @if $ls-enable-flex {
    @supports (display: flex) and (flex-wrap: wrap) {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
    }
  }

  @if $ls-enable-rtl {
    @at-root html[dir=rtl] & {
      margin-left: 0;
      margin-right: -($ls-gutter);
    }
  }
}

.#{slCreateElementClassName()} {
  box-sizing: border-box;
  display: inline-block;
  width: 100%;
  padding: 0;
  padding-left: $ls-gutter;
  margin: 0;
  vertical-align: top;
  font-size: $ls-base-font-size;
  position: relative;

  @if $ls-enable-flex {
    @supports (display: flex) and (flex-wrap: wrap) {
      display: block;
      flex-grow: 1;
      flex-shrink: 0;
      flex-basis: 100%;
    }
  }

  @if $ls-enable-rtl {
    @at-root html[dir=rtl] & {
      padding-left: 0;
      padding-right: $ls-gutter;
    }
  }
}

@if $ls-enable-grid-center {
  .#{slCreateBlockClassName('center')} {
    text-align: center;

    @if $ls-enable-flex {
      @supports (display: flex) and (flex-wrap: wrap) {
        justify-content: center;
      }
    }

    > .#{slCreateElementClassName()} {
      text-align: left;
    }
  }
}

@if $ls-enable-grid-cell-center {
  .#{slCreateElementClassName('center')} {
    display: block;
    margin-right: auto;
    margin-left: auto;
  }
}

@if $ls-enable-grid-right {
  .#{slCreateBlockClassName('right')} {
    text-align: right;

    @if $ls-enable-flex {
      @supports (justify-content: right) {
        justify-content: right;
      }
    }

    > .#{slCreateElementClassName()} {
      text-align: left;
    }
  }
}

@if $ls-enable-grid-middle {
  .#{slCreateBlockClassName('middle')} {
    @if $ls-enable-flex {
      @supports (align-items: center) {
        align-items: center;
      }
    }

    > .#{slCreateElementClassName()} {
      vertical-align: middle;

      @if $ls-enable-flex {
        @supports (align-items: center) {
          vertical-align: inherit;
        }
      }
    }
  }
}

@if $ls-enable-grid-bottom {
  .#{slCreateBlockClassName('bottom')} {
    @if $ls-enable-flex {
      @supports (align-items: flex-end) {
        align-items: flex-end;
      }
    }

    > .#{slCreateElementClassName()} {
      vertical-align: bottom;

      @if $ls-enable-flex {
        @supports (align-items: flex-end) {
          vertical-align: inherit;
        }
      }
    }
  }
}

@if $ls-enable-grid-flush {
  .#{slCreateBlockClassName('flush')} {
    margin-left: 0;

    > .#{slCreateElementClassName()} {
      padding-left: 0;
    }

    @if $ls-enable-rtl {
      @at-root html[dir=rtl] & {
        margin-right: 0;

        > .#{slCreateElementClassName()} {
          padding-right: 0;
        }
      }
    }
  }
}

// Create grid containers for each set size
@each $grid-enabled, $grid-key, $division, $operand in $ls-grids-sizes {
  @if $grid-enabled {
    @include ls-create-grid($grid-key, $ls-gutter, $division, $operand)
  }
}

@if $ls-enable-grid-auto {
  .#{slCreateBlockClassName('auto')} {
    > .#{slCreateElementClassName()} {
      width: auto;

      @if $ls-enable-flex {
        @supports (flex-basis: 0) {
          flex-basis: 0;
          max-width: 100%;
        }
      }
    }
  }
}

@if $ls-enable-grid-rev {
  .#{slCreateBlockClassName('rev')} {
    direction: rtl;

    @if $ls-enable-flex {
      @supports (flex-direction: row-reverse) {
        direction: inherit;
        flex-direction: row-reverse;
      }
    }

    > .#{slCreateElementClassName()} {
      direction: ltr;

      @if $ls-enable-flex {
        @supports (flex-direction: row-reverse) {
          direction: inherit;
        }
      }
    }
  }
}

// GRID WIDTHS

// Loop default widths
@include ls-create-widths($ls-widths);

// If responsive flag enabled, loop breakpoint widths
@if $ls-enable-responsive {
  @each $alias, $query in $ls-breakpoints {

    // Create each media query
    @media #{$query} {
      @include ls-create-widths($ls-widths, #{$ls-breakpoint-class-chain}#{$alias});
    }
  }
}

// Optional SCSS files.
@import "./pluggables/displays";
@import "./pluggables/spacers";
